name: Build, Test, and Deploy Next.js App to Azure Web App

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd reelio-frontend
          npm install

      - name: Run ESLint
        run: |
          cd reelio-frontend
          npm run lint

  build_image_for_staging:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: https://reeliocr.azurecr.io/
          username: ${{ secrets.CONTAINER_USERNAME }}
          password: ${{ secrets.CONTAINER_PASSWORD }}

      # Build and push container image for staging
      - name: Build and push container image for staging
        uses: docker/build-push-action@v3
        with:
          context: ./reelio-frontend
          push: true
          tags: reeliocr.azurecr.io/reelio-frontend-staging:${{ github.sha }}
          build-args: |
            NEXT_PUBLIC_API_URL=https://reelio-api-staging-gfdncgbhdpcyd9dg.northeurope-01.azurewebsites.net
          file: ./reelio-frontend/Dockerfile

  deploy_to_staging:
    runs-on: ubuntu-latest
    needs: build_image_for_staging
    steps:
      - name: Check out code
        uses: actions/checkout@v4   

      - name: Deploy to Azure Staging Web App
        id: deploy-to-staging
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'reelio-staging' 
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_PUBLISH_STAGING }}
          images: 'reeliocr.azurecr.io/reelio-frontend-staging:${{ github.sha }}'
      # Wait for staging deployment to stabilize
      - name: Wait for deployment to stabilize
        run: sleep 120  # Adjust the duration (in seconds) if necessary

  run_cypress_tests:
    runs-on: ubuntu-24.04
    needs: deploy_to_staging
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'


      - name: Install dependencies
        run: |
          cd reelio-frontend
          npm install

      - name: Install Cypress
        run: |
          npm install cypress --save-dev

      # Run Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v6


  build_and_deploy_to_production:
    runs-on: ubuntu-latest
    needs: run_cypress_tests
    if: success()  # Only run if Cypress tests pass
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: https://reeliocr.azurecr.io/
          username: ${{ secrets.CONTAINER_USERNAME }}
          password: ${{ secrets.CONTAINER_PASSWORD }}

      # Build and push container image for production
      - name: Build and push container image for production
        uses: docker/build-push-action@v3
        with:
          context: ./reelio-frontend
          push: true
          tags: reeliocr.azurecr.io/reelio-frontend:${{ github.sha }}
          build-args: |
            NEXT_PUBLIC_API_URL=https://reelio-api-bxffd9b2eebhb2d0.northeurope-01.azurewebsites.net
          file: ./reelio-frontend/Dockerfile

      - name: Deploy to Azure Production Web App
        id: deploy-to-production
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'reelio'  # Use the production Azure Web App name
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_PUBLISH }}
          images: 'reeliocr.azurecr.io/reelio-frontend:${{ github.sha }}'
